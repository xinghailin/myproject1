<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"  xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<beans:import resource="classpath*:ufa_security_bean.xml" />
	<!-- <import resource="classpath*:ufa_security_memcached_captcha.xml"/> -->
	
	<http pattern="/styles/**" security="none" />
	<http pattern="/static/**" security="none" />
	<http pattern="/images/**" security="none" />
	<http pattern="/scripts/**" security="none" />
	<http pattern="/resources/**" security="none" />
	
	<http auto-config="false" use-expressions="true" access-decision-manager-ref="accessDecisionManager" entry-point-ref="loginUrlAuthenticationEntryPoint">
 		<logout logout-success-url="${ufa.security.logout.success.url}" logout-url="/j_spring_security_logout" invalidate-session="true" delete-cookies="JSESSIONID" />
		<custom-filter position="FORM_LOGIN_FILTER" ref="preFormLoginCaptchaFilter" />
 		<anonymous enabled="true" granted-authority="ROLE_ANONYMOUS" />
		<session-management session-authentication-error-url="/login" session-fixation-protection="newSession">
			<concurrency-control max-sessions="1" expired-url="/login" error-if-maximum-exceeded="false" />
		</session-management>
		<custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
 	</http>

	<global-method-security secured-annotations="enabled" jsr250-annotations="enabled" pre-post-annotations="enabled">
 	</global-method-security>
	
	<!-- 采用多个authentication-provider从不同的表中读取用户信息,要求username在多张表中不能重复,建议前后台采用不能的username命名规则,否则需要手动加锁确保并发insert时的唯一性 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="daoAuthenticationProvider" /><!-- 需要使用此配置文件的项目自行实现,继承spring的DaoAuthenticationProvider -->
	</authentication-manager>
	
	<!-- 定义spring security beans -->
	<beans:bean id="securityMetadataSource" init-method="loadResourceDefine" class="org.ufa.security.service.InvocationSecurityMetadataSourceService">
		<beans:property name="roleService" ref="roleService" />
		<beans:property name="resourceService" ref="resourceService" />
		<beans:property name="appId"  value="2"/>
	</beans:bean>
	
	<!-- 登录成功以后的初始化工作 -->
	<beans:bean id="authenticationSuccessHandler" class="com.yyq.car.portal.ms.web.filter.CustomizedAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="${ufa.security.defaultTargetUrl}" />
		<beans:property name="alwaysUseDefaultTargetUrl" value="false" />
		<!-- 存放redirect目标URL的参数名称,位于URL的query string -->
		<beans:property name="targetUrlParameter" value="targeturl" />
	</beans:bean>
	
	<beans:bean id="customizedAuthenticationFailureHandler" class="org.ufa.security.filter.CustomizedAuthenticationFailureHandler"/>
	
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="adminUserDetailsService" />
		<beans:property name="passwordEncoder" ref="passwordEncoder" />
	</beans:bean>
	
 	<beans:bean id="passwordEncoder" class="com.yyq.car.portal.common.service.SHAPasswordEncoder" ></beans:bean>
    <!-- 验证码 -->
	<beans:bean id="parentPreFormLoginCaptchaFilter" class=" org.ufa.security.filter.CaptchaAuthenticationFilter" abstract="true">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<!-- 需要在spring引用的properties文件中配置此属性为true或false -->
		<beans:property name="useCaptcha" value="${ufa.security.use.captcha}" />
		<!-- 需要import ufa-security_jcaptcha.xml/ufa-security_kaptcha.xml -->
		<beans:property name="captchaProducer" ref="captchaProducer" />
		<beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
		<beans:property name="authenticationFailureHandler" ref="customizedAuthenticationFailureHandler" />
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
	</beans:bean>
	
	<beans:bean  id="preFormLoginCaptchaFilter" class="org.ufa.security.filter.CaptchaAuthenticationFilter" parent="parentPreFormLoginCaptchaFilter"/>
	
	<beans:bean  id="captchaProducer" class="org.ufa.security.captcha.JCaptchaProducer">
		<beans:property name="captchaProducer" ref="jcaptchaProducer"/>
		<!-- 需要在spring引用的properties文件中配置此属性为true或false -->
		<beans:property name="useCaptcha" value="${ufa.security.use.captcha}"/>
	</beans:bean >
	
	<!-- JCaptcha验证码服务 -->
	<beans:bean  id="jcaptchaProducer" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<!-- engine的全类名 -->
		<beans:property name="captchaEngineClass" value="org.ufa.security.captcha.SmallGMailEngine"/>
		<!-- 默认生成的图片180秒过期 , 可另行设置 -->
		<beans:property name="minGuarantedStorageDelayInSeconds" value="600" />
	</beans:bean >
	
</beans:beans>
